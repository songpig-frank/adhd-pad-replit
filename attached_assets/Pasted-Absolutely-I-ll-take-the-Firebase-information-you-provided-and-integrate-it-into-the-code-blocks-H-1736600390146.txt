Absolutely! Iâ€™ll take the Firebase information you provided and integrate it into the code blocks. Hereâ€™s the updated version with your Firebase details filled in:

---

### **Code Block for Replit Setup**

```markdown
# ADHD Pad - Technical Setup Instructions

## 1. Project Overview
- **Name**: ADHD Pad
- **Description**: A productivity platform to help individuals with ADHD capture ideas, organize tasks, and stay focused.
- **Tech Stack**: React Native, Expo, Firebase (Firestore, Authentication, Storage), OpenAI API.

## 2. Firebase Configuration
Add the following environment variables in the **Secrets** tab:
```plaintext
REACT_APP_FIREBASE_API_KEY=AIzaSyB8v3GfIZPgWqm1JzDJx9PUDw8Jvlo81po
REACT_APP_FIREBASE_AUTH_DOMAIN=adhd-pad.firebaseapp.com
REACT_APP_FIREBASE_PROJECT_ID=adhd-pad
REACT_APP_FIREBASE_STORAGE_BUCKET=adhd-pad.appspot.com
REACT_APP_FIREBASE_MESSAGING_SENDER_ID=100556266383
REACT_APP_FIREBASE_APP_ID=1:100556266383:web:abcdef1234567890abcdef
```

## 3. Install Dependencies
Run the following commands in the Replit shell:
```bash
npm install firebase expo-av react-router-dom react-native-paper @react-navigation/native @react-navigation/stack expo-font expo-app-loading
```

## 4. Project Structure
Create the following folder structure:
```
adhd-pad/
â”œâ”€â”€ public/
â”‚   â””â”€â”€ index.html
â”œâ”€â”€ src/
â”‚   â”œâ”€â”€ components/
â”‚   â”œâ”€â”€ screens/
â”‚   â”œâ”€â”€ services/
â”‚   â”œâ”€â”€ utils/
â”‚   â”œâ”€â”€ App.js
â”‚   â”œâ”€â”€ index.js
â”‚   â””â”€â”€ firebase.js
â”œâ”€â”€ .env
â”œâ”€â”€ package.json
â””â”€â”€ README.md
```

## 5. Firebase Setup
Create a `firebase.js` file in the `src` folder:
```javascript
// src/firebase.js
import { initializeApp } from "firebase/app";
import { getFirestore } from "firebase/firestore";
import { getAuth } from "firebase/auth";
import { getStorage } from "firebase/storage";

const firebaseConfig = {
  apiKey: "AIzaSyB8v3GfIZPgWqm1JzDJx9PUDw8Jvlo81po",
  authDomain: "adhd-pad.firebaseapp.com",
  projectId: "adhd-pad",
  storageBucket: "adhd-pad.appspot.com",
  messagingSenderId: "100556266383",
  appId: "1:100556266383:web:abcdef1234567890abcdef",
};

const app = initializeApp(firebaseConfig);
const db = getFirestore(app);
const auth = getAuth(app);
const storage = getStorage(app);

export { db, auth, storage };
```

## 6. App Entry Point
Create an `index.js` file in the `src` folder:
```javascript
// src/index.js
import { AppRegistry } from 'react-native';
import App from './App';
import { name as appName } from './app.json';

AppRegistry.registerComponent(appName, () => App);
```

## 7. Main App Component
Create an `App.js` file in the `src` folder:
```javascript
// src/App.js
import React from 'react';
import { Text, View } from 'react-native';
import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';
import VoiceRecorder from './components/VoiceRecorder';
import TaskList from './components/TaskList';

const Stack = createStackNavigator();

export default function App() {
  return (
    <NavigationContainer>
      <Stack.Navigator initialRouteName="Home">
        <Stack.Screen name="Home" component={HomeScreen} />
        <Stack.Screen name="VoiceRecorder" component={VoiceRecorder} />
        <Stack.Screen name="TaskList" component={TaskList} />
      </Stack.Navigator>
    </NavigationContainer>
  );
}

function HomeScreen() {
  return (
    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>
      <Text>Welcome to ADHD Pad!</Text>
    </View>
  );
}
```

## 8. Voice Recorder Component
Create a `VoiceRecorder.js` file in the `src/components` folder:
```javascript
// src/components/VoiceRecorder.js
import React, { useState } from 'react';
import { Button, View, Text } from 'react-native';
import { Audio } from 'expo-av';

const VoiceRecorder = () => {
  const [recording, setRecording] = useState(null);

  const startRecording = async () => {
    await Audio.requestPermissionsAsync();
    const { recording } = await Audio.Recording.createAsync(
      Audio.RecordingOptionsPresets.HIGH_QUALITY
    );
    setRecording(recording);
  };

  const stopRecording = async () => {
    await recording.stopAndUnloadAsync();
    const uri = recording.getURI();
    console.log('Recording saved to:', uri);
    // TODO: Upload to Firebase Storage or send to OpenAI for processing
  };

  return (
    <View>
      <Button
        title={recording ? 'Stop Recording' : 'Start Recording'}
        onPress={recording ? stopRecording : startRecording}
      />
    </View>
  );
};

export default VoiceRecorder;
```

## 9. Task List Component
Create a `TaskList.js` file in the `src/components` folder:
```javascript
// src/components/TaskList.js
import React, { useEffect, useState } from 'react';
import { View, Text, FlatList } from 'react-native';
import { collection, onSnapshot } from 'firebase/firestore';
import { db } from '../firebase';

const TaskList = () => {
  const [tasks, setTasks] = useState([]);

  useEffect(() => {
    const unsubscribe = onSnapshot(collection(db, 'tasks'), (snapshot) => {
      setTasks(snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));
    });
    return () => unsubscribe();
  }, []);

  return (
    <FlatList
      data={tasks}
      keyExtractor={(item) => item.id}
      renderItem={({ item }) => (
        <View style={{ padding: 10 }}>
          <Text>{item.title}</Text>
          <Text>{item.description}</Text>
        </View>
      )}
    />
  );
};

export default TaskList;
```

## 10. Run the Project
Start the development server:
```bash
expo start
```

---

### **Next Steps**
1. Copy the code blocks above into a new Replit project.
2. Run the project and start building your app!

Let me know if you need further assistance! ðŸš€